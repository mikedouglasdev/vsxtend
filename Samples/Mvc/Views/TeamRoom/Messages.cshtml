@model Vsxtend.Samples.Mvc.ViewModels.TeamRoomViewModel

@{
    ViewBag.Title = "Messages";
}

<h2>Room Messages</h2>

<input type="text" id="message" />
<input type="button" id="sendmessage" value="Send" />
<ul id="discussion"></ul>
@section scripts {
<script src="~/Scripts/jquery.signalR-2.0.2.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>
<script type="text/javascript">
    $(function () {
        $.connection.hub.start();
        // Declare a proxy to reference the hub.
        var chat = $.connection.teamRoomHub;
        var latestDate = null;
        chat.client.addNewMessageToPage = function (name, message, date) {
            // Add the message to the page.
            $('#discussion').append('<li><strong>' + htmlEncode(name)
                + '</strong>: ' + htmlEncode(message) + ' ' + date + '</li>');
            latestDate = date;
        };
        // Start the connection.
        $.connection.hub.start().done(function () {
            var id = "@ViewContext.RouteData.Values["id"]";
            chat.server.getMessages(id, null);
           // date = new Date();
            //Call the server side method for every 5 seconds
            setInterval(function () {
                
                chat.server.getMessages(id, latestDate);
            }, 5000);

            $('#sendmessage').click(function () {
                // Call the Send method on the hub.
                chat.server.send($('#message').val(), id);
                // Clear text box and reset focus for next comment.
                $('#message').val('').focus();
            });
        });

    });
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }
</script>
}



@*<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Messages.value.FirstOrDefault().postedBy.displayName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Messages.value.FirstOrDefault().content)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Messages.value.FirstOrDefault().postedTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Messages.value.FirstOrDefault().postedByUserTfid)
        </th>
    </tr>

@foreach (var item in Model.Messages.value) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.postedBy.displayName)
        </td>
        <td>
            @Html.DisplayFor(modelItem  => item.content)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.postedTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.postedByUserTfid)
        </td>
    </tr>
}

</table>*@

